import os
from telegram import Bot, InlineKeyboardButton, InlineKeyboardMarkup
from telegram.ext import ApplicationBuilder, CommandHandler, CallbackQueryHandler, ContextTypes

# –í—Ä–µ–º–µ–Ω–Ω–æ –≤—Å—Ç–∞–≤–ª—è–µ–º —Ç–æ–∫–µ–Ω –Ω–∞–ø—Ä—è–º—É—é
TOKEN = "8163815904:AAES02wCoEM6334FpPxuKbiuWsy7-ii9a-E"
bot = Bot(token=TOKEN)

# –ö–æ–º–∞–Ω–¥–∞ /start
async def start(update, context):
    await update.message.reply_text("–ü—Ä–∏–≤–µ—Ç! –Ø –±–æ—Ç –¥–ª—è —Ç–æ—Ä–≥–æ–≤–ª–∏. –ò—Å–ø–æ–ª—å–∑—É–π /signal –∏–ª–∏ /id.")

# –ö–æ–º–∞–Ω–¥–∞ /id ‚Äî –ø—Ä–∏—Å—ã–ª–∞–µ—Ç —Ç–≤–æ–π chat_id
async def get_chat_id(update, context):
    chat_id = update.effective_chat.id
    await update.message.reply_text(f"–í–∞—à chat_id: `{chat_id}`", parse_mode='Markdown')

# –ö–æ–º–∞–Ω–¥–∞ /signal ‚Äî –æ—Ç–ø—Ä–∞–≤–∫–∞ —Å–∏–≥–Ω–∞–ª–∞ —Å –∫–Ω–æ–ø–∫–∞–º–∏
async def refresh(update, context):
    text = "üîî –°–∏–≥–Ω–∞–ª EUR/USD M1\nüü¢ BUY (–≤–≤–µ—Ä—Ö)\n‚è≥ –í—Ä–µ–º—è: 1‚Äì3 –º–∏–Ω"
    keyboard = InlineKeyboardMarkup([
        [InlineKeyboardButton("üü¢ BUY", callback_data='buy')],
        [InlineKeyboardButton("üî¥ SELL", callback_data='sell')]
    ])
    await update.message.reply_text(text=text, reply_markup=keyboard)

# –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–Ω–æ–ø–æ–∫ BUY / SELL
async def handle_button(update, context):
    query = update.callback_query
    await query.answer()
    action = query.data
    if action == "buy":
        await query.edit_message_text("‚úÖ –°–¥–µ–ª–∫–∞ BUY –∑–∞—Ñ–∏–∫—Å–∏—Ä–æ–≤–∞–Ω–∞!")
    elif action == "sell":
        await query.edit_message_text("‚úÖ –°–¥–µ–ª–∫–∞ SELL –∑–∞—Ñ–∏–∫—Å–∏—Ä–æ–≤–∞–Ω–∞!")

# üöÄ –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞
def main():
    print("‚úÖ –ë–æ—Ç –∑–∞–ø—É—Å–∫–∞–µ—Ç—Å—è...")
    app = ApplicationBuilder().token(TOKEN).build()
    app.add_handler(CommandHandler("start", start))
    app.add_handler(CommandHandler("signal", refresh))
    app.add_handler(CommandHandler("id", get_chat_id))          # üëà –≤–∞–∂–Ω–æ
    app.add_handler(CallbackQueryHandler(handle_button))
    app.run_polling()

if __name__ == "__main__":
    main()


