import os
from telegram import Update, InlineKeyboardButton, InlineKeyboardMarkup
from telegram.ext import (
    ApplicationBuilder, CommandHandler,
    CallbackQueryHandler, ContextTypes
)

# –ü–æ–ª—É—á–∞–µ–º —Ç–æ–∫–µ–Ω –∏–∑ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è
TOKEN = os.getenv("TELEGRAM_TOKEN") or "8163815904:AAES02wCoEM6334FpPxuKbiuWsy7-ii9a-E"

# üëã –ö–æ–º–∞–Ω–¥–∞ /start
async def start(update: Update, context: ContextTypes.DEFAULT_TYPE):
    await update.message.reply_text(
        "–ü—Ä–∏–≤–µ—Ç! –Ø –±–æ—Ç –¥–ª—è —Ç–æ—Ä–≥–æ–≤–ª–∏. –ò—Å–ø–æ–ª—å–∑—É–π /signal —á—Ç–æ–±—ã –ø–æ–ª—É—á–∏—Ç—å —Å–∏–≥–Ω–∞–ª.\n"
        "–ù–∞–ø–∏—à–∏ /id —á—Ç–æ–±—ã —É–∑–Ω–∞—Ç—å —Å–≤–æ–π chat_id."
    )

# üÜî –ö–æ–º–∞–Ω–¥–∞ /id
async def get_chat_id(update: Update, context: ContextTypes.DEFAULT_TYPE):
    chat_id = update.effective_chat.id
    await update.message.reply_text(f"–í–∞—à chat_id: `{chat_id}`", parse_mode='MarkdownV2')

# üì° –ö–æ–º–∞–Ω–¥–∞ /signal ‚Äî –æ—Ç–ø—Ä–∞–≤–∫–∞ —Å–∏–≥–Ω–∞–ª–∞ —Å –∫–Ω–æ–ø–∫–∞–º–∏ BUY/SELL
async def send_signal(update: Update, context: ContextTypes.DEFAULT_TYPE):
    text = "üîî –°–∏–≥–Ω–∞–ª EUR/USD M1\nüü¢ BUY (–≤–≤–µ—Ä—Ö)\n‚è≥ –í—Ä–µ–º—è: 1‚Äì3 –º–∏–Ω"
    keyboard = InlineKeyboardMarkup([
        [InlineKeyboardButton("üü¢ BUY", callback_data='buy')],
        [InlineKeyboardButton("üî¥ SELL", callback_data='sell')]
    ])
    await update.message.reply_text(text=text, reply_markup=keyboard)

# üü¢üî¥ –û–±—Ä–∞–±–æ—Ç–∫–∞ –Ω–∞–∂–∞—Ç–∏–π –∫–Ω–æ–ø–æ–∫
async def handle_button(update: Update, context: ContextTypes.DEFAULT_TYPE):
    query = update.callback_query
    await query.answer()
    if query.data == "buy":
        await query.edit_message_text("‚úÖ –°–¥–µ–ª–∫–∞ BUY –∑–∞—Ñ–∏–∫—Å–∏—Ä–æ–≤–∞–Ω–∞!")
    elif query.data == "sell":
        await query.edit_message_text("‚úÖ –°–¥–µ–ª–∫–∞ SELL –∑–∞—Ñ–∏–∫—Å–∏—Ä–æ–≤–∞–Ω–∞!")

# üöÄ –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞
def main():
    print("‚úÖ –ë–æ—Ç –∑–∞–ø—É—Å–∫–∞–µ—Ç—Å—è...")
    app = ApplicationBuilder().token(TOKEN).build()

    app.add_handler(CommandHandler("start", start))
    app.add_handler(CommandHandler("id", get_chat_id))
    app.add_handler(CommandHandler("signal", send_signal))
    app.add_handler(CallbackQueryHandler(handle_button))

    app.run_polling()

if __name__ == "__main__":
    main()



